{"version":3,"sources":["webpack://extensions-api-demo-0.1.0/./components/MyTabComponent.vue","webpack://extensions-api-demo-0.1.0/components/MyTabComponent.vue","webpack://extensions-api-demo-0.1.0/./components/MyTabComponent.vue?a315","webpack://extensions-api-demo-0.1.0/./components/MyTabComponent.vue?5a56","webpack://extensions-api-demo-0.1.0//home/pnayak/my-ui-examples/node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js"],"names":["render","_vm","this","_c","_self","_v","_s","resource","id","staticRenderFns","name","props","type","Object","default","data","key","component","normalizeComponent","scriptExports","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","concat","exports"],"mappings":"wNAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACA,EAAG,KAAK,CAACF,EAAII,GAAG,wBAAwBF,EAAG,KAAK,CAACF,EAAII,GAAGJ,EAAIK,GAAGL,EAAIM,SAASC,UAErJC,EAAkB,GCDP,GACfC,KAAA,iBACAC,MAAA,CACAJ,SAAA,CACAK,KAAAC,OACAC,aAAA,MAGAC,OACA,OAAAC,IAAA,WCVoY,I,YCOhYC,EAAY,eACd,EACAjB,EACAS,GACA,EACA,KACA,WACA,MAIa,aAAAQ,E,2CCZA,SAASC,EACtBC,EACAnB,EACAS,EACAW,EACAC,EACAC,EACAC,EACAC,GAGA,IAoBIC,EApBAC,EACuB,oBAAlBP,EAA+BA,EAAcO,QAAUP,EAuDhE,GApDInB,IACF0B,EAAQ1B,OAASA,EACjB0B,EAAQjB,gBAAkBA,EAC1BiB,EAAQC,WAAY,GAIlBP,IACFM,EAAQE,YAAa,GAInBN,IACFI,EAAQG,SAAW,UAAYP,GAI7BC,GAEFE,EAAO,SAAUK,GAEfA,EACEA,GACC5B,KAAK6B,QAAU7B,KAAK6B,OAAOC,YAC3B9B,KAAK+B,QAAU/B,KAAK+B,OAAOF,QAAU7B,KAAK+B,OAAOF,OAAOC,WAEtDF,GAA0C,qBAAxBI,sBACrBJ,EAAUI,qBAGRb,GACFA,EAAac,KAAKjC,KAAM4B,GAGtBA,GAAWA,EAAQM,uBACrBN,EAAQM,sBAAsBC,IAAId,IAKtCG,EAAQY,aAAeb,GACdJ,IACTI,EAAOD,EACH,WACEH,EAAac,KACXjC,MACCwB,EAAQE,WAAa1B,KAAK+B,OAAS/B,MAAMqC,MAAMC,SAASC,aAG7DpB,GAGFI,EACF,GAAIC,EAAQE,WAAY,CAGtBF,EAAQgB,cAAgBjB,EAExB,IAAIkB,EAAiBjB,EAAQ1B,OAC7B0B,EAAQ1B,OAAS,SAAkC4C,EAAGd,GAEpD,OADAL,EAAKU,KAAKL,GACHa,EAAeC,EAAGd,QAEtB,CAEL,IAAIe,EAAWnB,EAAQoB,aACvBpB,EAAQoB,aAAeD,EAAW,GAAGE,OAAOF,EAAUpB,GAAQ,CAACA,GAInE,MAAO,CACLuB,QAAS7B,EACTO,QAASA,GA7Fb","file":"extensions-api-demo-0.1.0.umd.min.4.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('h1',[_vm._v(\"THIS IS A DEMO TAB\")]),_c('h2',[_vm._v(_vm._s(_vm.resource.id))])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<script>\nexport default {\n  name:  'MyTabComponent',\n  props: {\n    resource: {\n      type:    Object,\n      default: () => ({})\n    }\n  },\n  data() {\n    return { key: 'value' };\n  }\n};\n</script>\n\n<template>\n  <div>\n    <h1>THIS IS A DEMO TAB</h1>\n    <h2>{{ resource.id }}</h2>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--2-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./MyTabComponent.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--2-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./MyTabComponent.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./MyTabComponent.vue?vue&type=template&id=73582684&scoped=true\"\nimport script from \"./MyTabComponent.vue?vue&type=script&lang=js\"\nexport * from \"./MyTabComponent.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"73582684\",\n  null\n  \n)\n\nexport default component.exports","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent(\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */,\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options =\n    typeof scriptExports === 'function' ? scriptExports.options : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) {\n    // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n          injectStyles.call(\n            this,\n            (options.functional ? this.parent : this).$root.$options.shadowRoot\n          )\n        }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection(h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n"],"sourceRoot":""}